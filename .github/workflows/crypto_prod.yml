name: build-test-benchmark crypto crate

on:
  release:
    types: [created]
  pull_request:
    branches:
      - master
    types:
      - "closed"
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

defaults:
  run:
    working-directory: crypto

jobs:
  build-test-benchmark:
    # this job will only run if the PR has been merged
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}-crypto
      - name: Install Latest Rust Nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          target: wasm32-unknown-unknown
      - name: Build Crypto Library
        run: cargo +nightly build --verbose --release --target wasm32-unknown-unknown
      - name: Run Tests
        run: cargo +nightly test --verbose --no-fail-fast --release

  benchmark:
    runs-on: ubuntu-latest
    timeout-minutes: 40
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}-crypto
      - name: Install Latest Rust Nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          target: wasm32-unknown-unknown
      - name: Benchmark Crypto Library
        run: cargo +nightly bench --features bench

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Cache Dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}-lint
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
          components: clippy
      - name: lint
        run: cargo +nightly clippy -- -D warnings
